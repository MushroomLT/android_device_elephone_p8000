From 2dd1270eed9111a4364e9fc85f2d083f45745f33 Mon Sep 17 00:00:00 2001
From: Mister Oyster <oysterized@gmail.com>
Date: Mon, 19 Dec 2016 15:57:06 +0100
Subject: [PATCH] Mtk: camera: update MtkCamera and MtkCameraParameters

---
 camera/mediatek/MtkCamera.cpp           |   2 +-
 camera/mediatek/MtkCameraParameters.cpp | 250 +++++++++++++++++++++++++-------
 include/camera/MtkCamera.h              |  38 ++++-
 include/camera/MtkCameraParameters.h    | 213 ++++++++++++++++++++++-----
 4 files changed, 408 insertions(+), 95 deletions(-)

diff --git a/camera/mediatek/MtkCamera.cpp b/camera/mediatek/MtkCamera.cpp
index 5f56c94..e11b0c9 100644
--- a/camera/mediatek/MtkCamera.cpp
+++ b/camera/mediatek/MtkCamera.cpp
@@ -98,7 +98,7 @@ init(const sp<IMemory>& dataPtr)
     //
     heap = dataPtr->getMemory(&offset, &size);
     if  ( NULL == heap.get() || NULL == heap->base() ) {
-        ALOGE("[MtkCamMsgExtDataHelper] heap or heap->base() is NULL - (heap,offset,size)=(%p,%ld,%d) \r\n", heap.get(), offset, size);
+        ALOGE("[MtkCamMsgExtDataHelper] heap or heap->base() is NULL - (heap,offset,size)=(%p,%d,%d) \r\n", heap.get(), offset, size);
         goto lbExit;
     }
     //
diff --git a/camera/mediatek/MtkCameraParameters.cpp b/camera/mediatek/MtkCameraParameters.cpp
index fd2a717..e0f0a39 100644
--- a/camera/mediatek/MtkCameraParameters.cpp
+++ b/camera/mediatek/MtkCameraParameters.cpp
@@ -1,4 +1,4 @@
-/* Copyright Statement:
+ï»¿/* Copyright Statement:
  *
  * This software/firmware and related documentation ("MediaTek Software") are
  * protected under relevant copyright laws. The information contained herein is
@@ -70,7 +70,7 @@ const char MtkCameraParameters::PROPERTY_KEY_CLIENT_APPMODE[]   = "client.appmod
 const char MtkCameraParameters::APP_MODE_NAME_DEFAULT[]         = "Default";
 const char MtkCameraParameters::APP_MODE_NAME_MTK_ENG[]         = "MtkEng";
 const char MtkCameraParameters::APP_MODE_NAME_MTK_ATV[]         = "MtkAtv";
-const char MtkCameraParameters::APP_MODE_NAME_MTK_S3D[]         = "MtkS3d";
+const char MtkCameraParameters::APP_MODE_NAME_MTK_STEREO[]      = "MtkStereo";
 const char MtkCameraParameters::APP_MODE_NAME_MTK_VT[]          = "MtkVt";
 const char MtkCameraParameters::APP_MODE_NAME_MTK_PHOTO[]       = "MtkPhoto";
 const char MtkCameraParameters::APP_MODE_NAME_MTK_VIDEO[]       = "MtkVideo";
@@ -95,6 +95,28 @@ const char MtkCameraParameters::KEY_FB_SKIN_COLOR_MAX[]     = "fb-skin-color-max
 const char MtkCameraParameters::KEY_FB_SHARP[]              = "fb-sharp";
 const char MtkCameraParameters::KEY_FB_SHARP_MIN[]          = "fb-sharp-min";
 const char MtkCameraParameters::KEY_FB_SHARP_MAX[]          = "fb-sharp-max";
+//
+const char MtkCameraParameters::KEY_FB_ENLARGE_EYE[]        = "fb-enlarge-eye";
+const char MtkCameraParameters::KEY_FB_ENLARGE_EYE_MIN[]    = "fb-enlarge-eye-min";
+const char MtkCameraParameters::KEY_FB_ENLARGE_EYE_MAX[]    = "fb-enlarge-eye-max";
+//
+const char MtkCameraParameters::KEY_FB_SLIM_FACE[]          = "fb-slim-face";
+const char MtkCameraParameters::KEY_FB_SLIM_FACE_MIN[]      = "fb-slim-face-min";
+const char MtkCameraParameters::KEY_FB_SLIM_FACE_MAX[]      = "fb-slim-face-max";
+//
+const char MtkCameraParameters::KEY_FB_EXTREME_BEAUTY[]     = "fb-extreme-beauty";
+//
+const char MtkCameraParameters::KEY_FB_TOUCH_POS[]          = "fb-touch-pos";
+//
+const char MtkCameraParameters::KEY_FB_FACE_POS[]           = "fb-face-pos";
+//
+const char MtkCameraParameters::KEY_FACE_BEAUTY[]           = "face-beauty";
+//
+const char MtkCameraParameters::KEY_FB_EXTREME_SUPPORTED[]  = "fb-extreme-beauty-supported";
+//
+const char MtkCameraParameters::KEY_FEATURE_MAX_FPS[]       = "feature-max-fps";
+//
+const char MtkCameraParameters::KEY_VIDEO_FACE_BEAUTY_SUPPORTED[] = "vfb-supported";
 
 
 //
@@ -116,7 +138,7 @@ const char MtkCameraParameters::KEY_STEREO_3D_MODE [] = "stereo3d-mode";
 const char MtkCameraParameters::KEY_STEREO_3D_IMAGE_FORMAT [] = "stereo3d-image-format";
 
 // ZSD
-const char MtkCameraParameters::KEY_ZSD_MODE[] = "zsd-mode";
+const char MtkCameraParameters::KEY_ZSD_MODE[] = "zsd-mode"; 
 const char MtkCameraParameters::KEY_SUPPORTED_ZSD_MODE[] = "zsd-supported";
 //
 const char MtkCameraParameters::KEY_FPS_MODE[] = "fps-mode";
@@ -152,7 +174,7 @@ const char MtkCameraParameters::FOCUS_METER_SPOT[] = "spot";
 const char MtkCameraParameters::FOCUS_METER_MULTI[] = "multi";
 
 // AWB2PASS
-const char MtkCameraParameters::KEY_AWB2PASS[] = "awb-2pass";
+const char MtkCameraParameters::KEY_AWB2PASS[] = "awb-2pass"; 
 
 
 //
@@ -179,15 +201,15 @@ const char MtkCameraParameters::CAPTURE_MODE_NORMAL[] = "normal";
 const char MtkCameraParameters::CAPTURE_MODE_BEST_SHOT[] = "bestshot";
 const char MtkCameraParameters::CAPTURE_MODE_EV_BRACKET_SHOT[] = "evbracketshot";
 const char MtkCameraParameters::CAPTURE_MODE_SMILE_SHOT[] = "smileshot";
-const char MtkCameraParameters::CAPTURE_MODE_MAV_SHOT[] = "mav";
-const char MtkCameraParameters::CAPTURE_MODE_AUTO_PANORAMA_SHOT[] = "autorama";
-const char MtkCameraParameters::CAPTURE_MODE_MOTION_TRACK_SHOT[] = "motiontrack";
-const char MtkCameraParameters::CAPTURE_MODE_HDR_SHOT[] = "hdr";
-const char MtkCameraParameters::CAPTURE_MODE_ASD_SHOT[] = "asd";
+const char MtkCameraParameters::CAPTURE_MODE_MAV_SHOT[] = "mav"; 
+const char MtkCameraParameters::CAPTURE_MODE_AUTO_PANORAMA_SHOT[] = "autorama"; 
+const char MtkCameraParameters::CAPTURE_MODE_MOTION_TRACK_SHOT[] = "motiontrack"; 
+const char MtkCameraParameters::CAPTURE_MODE_HDR_SHOT[] = "hdr"; 
+const char MtkCameraParameters::CAPTURE_MODE_ASD_SHOT[] = "asd"; 
 const char MtkCameraParameters::CAPTURE_MODE_ZSD_SHOT[] = "zsd";
-const char MtkCameraParameters::CAPTURE_MODE_PANO_3D[] = "pano_3d";
-const char MtkCameraParameters::CAPTURE_MODE_SINGLE_3D[] = "single_3d";
-const char MtkCameraParameters::CAPTURE_MODE_FACE_BEAUTY[] = "face_beauty";
+const char MtkCameraParameters::CAPTURE_MODE_PANO_3D[] = "pano_3d"; 
+const char MtkCameraParameters::CAPTURE_MODE_SINGLE_3D[] = "single_3d"; 
+const char MtkCameraParameters::CAPTURE_MODE_FACE_BEAUTY[] = "face_beauty"; 
 const char MtkCameraParameters::CAPTURE_MODE_CONTINUOUS_SHOT[] = "continuousshot";
 const char MtkCameraParameters::CAPTURE_MODE_MULTI_MOTION[] = "multi_motion";
 const char MtkCameraParameters::CAPTURE_MODE_GESTURE_SHOT[] = "gestureshot";
@@ -218,25 +240,35 @@ const char MtkCameraParameters::PIXEL_FORMAT_YUV422I_UYVY[] = "yuv422i-uyvy";
 const char MtkCameraParameters::PIXEL_FORMAT_YUV422I_VYUY[] = "yuv422i-vyuy";
 const char MtkCameraParameters::PIXEL_FORMAT_YUV422I_YVYU[] = "yuv422i-yvyu";
 
-const char MtkCameraParameters::PIXEL_FORMAT_BAYER8[] = "bayer8";
-const char MtkCameraParameters::PIXEL_FORMAT_BAYER10[] = "bayer10";
+const char MtkCameraParameters::PIXEL_FORMAT_BAYER8[] = "bayer8"; 
+const char MtkCameraParameters::PIXEL_FORMAT_BAYER10[] = "bayer10";  
+
+const char MtkCameraParameters::PIXEL_FORMAT_BITSTREAM[] = "bitstream";
 
 const char MtkCameraParameters::KEY_BRIGHTNESS_VALUE[] = "brightness_value";
 
-// ISP Operation mode for meta mode use
-const char MtkCameraParameters::KEY_ISP_MODE[] = "isp-mode";
-// AF
-const char MtkCameraParameters::KEY_AF_X[] = "af-x";
-const char MtkCameraParameters::KEY_AF_Y[] = "af-y";
-// Effect
+// ISP Operation mode for meta mode use 
+const char MtkCameraParameters::KEY_ISP_MODE[] = "isp-mode"; 
+// AF 
+const char MtkCameraParameters::KEY_AF_X[] = "af-x"; 
+const char MtkCameraParameters::KEY_AF_Y[] = "af-y"; 
+// Effect 
 const char MtkCameraParameters::EFFECT_SEPIA_BLUE[] = "sepiablue";
 const char MtkCameraParameters::EFFECT_SEPIA_GREEN[] = "sepiagreen";
-
+const char MtkCameraParameters::EFFECT_NASHVILLE[] = "nashville";
+const char MtkCameraParameters::EFFECT_HEFE[] = "hefe";
+const char MtkCameraParameters::EFFECT_VALENCIA[] = "valencia";
+const char MtkCameraParameters::EFFECT_XPROII[] = "xproll";
+const char MtkCameraParameters::EFFECT_LOFI[] = "lofi";
+const char MtkCameraParameters::EFFECT_SIERRA[] = "sierra";
+const char MtkCameraParameters::EFFECT_KELVIN[] = "kelvin";
+const char MtkCameraParameters::EFFECT_WALDEN[] = "walden";
+const char MtkCameraParameters::EFFECT_F1977[] = "f1977";
 //
 //  on/off => FIXME: should be replaced with TRUE[]
 const char MtkCameraParameters::ON[] = "on";
 const char MtkCameraParameters::OFF[] = "off";
-//
+// 
 const char MtkCameraParameters::WHITE_BALANCE_TUNGSTEN[] = "tungsten";
 //
 const char MtkCameraParameters::ISO_SPEED_ENG[] = "iso-speed-eng";
@@ -254,48 +286,57 @@ const char MtkCameraParameters::KEY_FOCUS_ENG_MAX_STEP[] 	= "afeng-max-focus-ste
 const char MtkCameraParameters::KEY_FOCUS_ENG_MIN_STEP[] 	= "afeng-min-focus-step";
 const char MtkCameraParameters::KEY_FOCUS_ENG_BEST_STEP[]   = "afeng-best-focus-step";
 const char MtkCameraParameters::KEY_RAW_DUMP_FLAG[]         = "afeng_raw_dump_flag";
-const char MtkCameraParameters::KEY_PREVIEW_DUMP_RESOLUTION[] = "preview-dump-resolution";
+const char MtkCameraParameters::KEY_PREVIEW_DUMP_RESOLUTION[] = "prv-dump-res";
 // Values for KEY_PREVIEW_DUMP_RESOLUTION
 const int MtkCameraParameters::PREVIEW_DUMP_RESOLUTION_NORMAL  = 0;
 const int MtkCameraParameters::PREVIEW_DUMP_RESOLUTION_CROP  = 1;
 //
 const char MtkCameraParameters::KEY_MAX_NUM_DETECTED_OBJECT[] = "max-num-ot";
-//
+
+// KEY for Video HDR
 const char MtkCameraParameters::KEY_VIDEO_HDR[] = "video-hdr";
+const char MtkCameraParameters::KEY_VIDEO_HDR_MODE[] = "video-hdr-mode";
+const char MtkCameraParameters::VIDEO_HDR_MODE_IVHDR[] = "video-hdr-mode-ivhdr";
+const char MtkCameraParameters::VIDEO_HDR_MODE_MVHDR[] = "video-hdr-mode-mvhdr";
 
 // KEY for [Engineer Mode] Add new camera paramters for new requirements
-const char MtkCameraParameters::KEY_ENG_AE_ENABLE[] = "eng-ae-enable";
-const char MtkCameraParameters::KEY_ENG_PREVIEW_SHUTTER_SPEED[] = "eng-preview-shutter-speed";
-const char MtkCameraParameters::KEY_ENG_PREVIEW_SENSOR_GAIN[] = "eng-preview-sensor-gain";
-const char MtkCameraParameters::KEY_ENG_PREVIEW_ISP_GAIN[] = "eng-preview-isp-gain";
-const char MtkCameraParameters::KEY_ENG_PREVIEW_AE_INDEX[] = "eng-preview-ae-index";
-const char MtkCameraParameters::KEY_ENG_CAPTURE_SENSOR_GAIN[] = "eng-capture-sensor-gain";
-const char MtkCameraParameters::KEY_ENG_CAPTURE_ISP_GAIN[] = "eng-capture-isp-gain";
-const char MtkCameraParameters::KEY_ENG_CAPTURE_SHUTTER_SPEED[] = "eng-capture-shutter-speed";
-const char MtkCameraParameters::KEY_ENG_CAPTURE_ISO[] = "eng-capture-iso";
-const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_VALUE[] = "eng-flash-duty-value";
-const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_MIN[] = "eng-flash-duty-min";
-const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_MAX[] = "eng-flash-duty-max";
-const char MtkCameraParameters::KEY_ENG_ZSD_ENABLE[] = "eng-zsd-enable";
+const char MtkCameraParameters::KEY_ENG_AE_ENABLE[] = "ae-e";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_SHUTTER_SPEED[] = "prv-ss";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_SENSOR_GAIN[] = "prv-sr-g";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_ISP_GAIN[] = "prv-isp-g";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_AE_INDEX[] = "prv-ae-i";
+const char MtkCameraParameters::KEY_ENG_CAPTURE_SENSOR_GAIN[] = "cap-sr-g";
+const char MtkCameraParameters::KEY_ENG_CAPTURE_ISP_GAIN[] = "cap-isp-g";
+const char MtkCameraParameters::KEY_ENG_CAPTURE_SHUTTER_SPEED[] = "cap-ss";
+const char MtkCameraParameters::KEY_ENG_CAPTURE_ISO[] = "cap-iso";
+const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_VALUE[] = "flash-duty-value";
+const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_MIN[] = "flash-duty-min";
+const char MtkCameraParameters::KEY_ENG_FLASH_DUTY_MAX[] = "flash-duty-max";
+const char MtkCameraParameters::KEY_ENG_ZSD_ENABLE[] = "eng-zsd-e";
 const char MtkCameraParameters::KEY_SENSOR_TYPE[] = "sensor-type";
-const char MtkCameraParameters::KEY_ENG_PREVIEW_FPS[] = "eng-preview-fps";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_FPS[] = "eng-prv-fps";
 const char MtkCameraParameters::KEY_ENG_MSG[] = "eng-msg";
 const int  MtkCameraParameters::KEY_ENG_FLASH_DUTY_DEFAULT_VALUE = -1;
 const int  MtkCameraParameters::KEY_ENG_FLASH_STEP_DEFAULT_VALUE = -1;
-const char MtkCameraParameters::KEY_ENG_FLASH_STEP_MIN[] = "eng-flash-step-min";
-const char MtkCameraParameters::KEY_ENG_FLASH_STEP_MAX[] = "eng-flash-step-max";
-const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL[] = "eng-focus-fullscan-frame-interval";
-const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MAX[] = "eng-focus-fullscan-frame-interval-max";
-const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MIN[] = "eng-focus-fullscan-frame-interval-min";
+const char MtkCameraParameters::KEY_ENG_FLASH_STEP_MIN[] = "flash-step-min";
+const char MtkCameraParameters::KEY_ENG_FLASH_STEP_MAX[] = "flash-step-max";
+const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL[] = "focus-fs-fi";
+const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MAX[] = "focus-fs-fi-max";
+const char MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MIN[] = "focus-fs-fi-min";
 const int  MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MAX_DEFAULT = 65535;
 const int  MtkCameraParameters::KEY_ENG_FOCUS_FULLSCAN_FRAME_INTERVAL_MIN_DEFAULT = 0;
-const char MtkCameraParameters::KEY_ENG_PREVIEW_FRAME_INTERVAL_IN_US[] = "eng-preview-frame-interval-in-us";
-const char MtkCameraParameters::KEY_ENG_PARAMETER1[] = "key-eng-parameter1";
-const char MtkCameraParameters::KEY_ENG_PARAMETER2[] = "key-eng-parameter2";
-const char MtkCameraParameters::KEY_ENG_PARAMETER3[] = "key-eng-parameter3";
+const char MtkCameraParameters::KEY_ENG_PREVIEW_FRAME_INTERVAL_IN_US[] = "eng-prv-fius";
+const char MtkCameraParameters::KEY_ENG_PARAMETER1[] = "eng-p1";
+const char MtkCameraParameters::KEY_ENG_PARAMETER2[] = "eng-p2";
+const char MtkCameraParameters::KEY_ENG_PARAMETER3[] = "eng-p3";
+
+// KEY for [Engineer Mode] Add new camera paramters for ev value
+const char MtkCameraParameters::KEY_ENG_EV_VALUE[] = "eng-ev-value";
+const char MtkCameraParameters::KEY_ENG_EVB_ENABLE[] = "eng-evb-enable";
 
-const char MtkCameraParameters::KEY_ENG_SAVE_SHADING_TABLE[] = "eng-save-shading-table";
-const char MtkCameraParameters::KEY_ENG_SHADING_TABLE[] = "eng-shading-table";
+
+const char MtkCameraParameters::KEY_ENG_SAVE_SHADING_TABLE[] = "eng-s-shad-t";
+const char MtkCameraParameters::KEY_ENG_SHADING_TABLE[] = "eng-shad-t";
 const int MtkCameraParameters::KEY_ENG_SHADING_TABLE_AUTO = 0;
 const int MtkCameraParameters::KEY_ENG_SHADING_TABLE_LOW = 1;
 const int MtkCameraParameters::KEY_ENG_SHADING_TABLE_MIDDLE = 2;
@@ -303,6 +344,113 @@ const int MtkCameraParameters::KEY_ENG_SHADING_TABLE_HIGH = 3;
 const int MtkCameraParameters::KEY_ENG_SHADING_TABLE_TSF = 4;
 
 // KEY for [Engineer Mode] Add new camera paramters for ev calibration
-const char MtkCameraParameters::KEY_ENG_EV_CALBRATION_OFFSET_VALUE[] = "eng-ev-cal-offset";
-
+const char MtkCameraParameters::KEY_ENG_EV_CALBRATION_OFFSET_VALUE[] = "ev-cal-o";
+
+// KEY for [Engineer Mode] MFLL: Multi-frame lowlight capture
+const char MtkCameraParameters::KEY_ENG_MFLL_SUPPORTED[] = "eng-mfll-s";
+const char MtkCameraParameters::KEY_ENG_MFLL_ENABLE[] = "eng-mfll-e";
+const char MtkCameraParameters::KEY_ENG_MFLL_PICTURE_COUNT[] = "eng-mfll-pc";
+
+// KEY for [Engineer Mode] Two more sensor mode
+const char MtkCameraParameters::KEY_ENG_SENOSR_MODE_SLIM_VIDEO1_SUPPORTED[] = "sv1-s";
+const char MtkCameraParameters::KEY_ENG_SENOSR_MODE_SLIM_VIDEO2_SUPPORTED[] = "sv2-s";
+
+// KEY for [Engineer Mode] Video raw dump
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_2M_SUPPORTED[] = "vdr-r2m-s";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_4K2K_SUPPORTED[] = "vdr-r4k2k-s";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_CROP_CENTER_2M_SUPPORTED[] = "vdr-cc2m-s";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_RESIZE[] = "vdr-r";
+
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_SUPPORTED[] = "vrd-mfr-s";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_ENABLE[] = "vrd-mfr-e";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MIN[] = "vrd-mfr-min";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MAX[] = "vrd-mfr-max";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_LOW[] = "vrd-mfr-low";
+const char MtkCameraParameters::KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_HIGH[] = "vrd-mfr-high";
+
+const char MtkCameraParameters::KEY_ENG_MTK_AWB_SUPPORTED[] = "mtk-awb-s";
+const char MtkCameraParameters::KEY_ENG_SENSOR_AWB_SUPPORTED[] = "sr-awb-s";
+const char MtkCameraParameters::KEY_ENG_MTK_AWB_ENABLE[] = "mtk-awb-e";
+const char MtkCameraParameters::KEY_ENG_SENSOR_AWB_ENABLE[] = "sr-awb-e";
+
+const char MtkCameraParameters::KEY_ENG_MTK_SHADING_SUPPORTED[] = "mtk-shad-s";
+const char MtkCameraParameters::KEY_ENG_MTK_1to3_SHADING_SUPPORTED[] = "mtk-123-shad-s";
+const char MtkCameraParameters::KEY_ENG_SENSOR_SHADNING_SUPPORTED[] = "sr-shad-s";
+const char MtkCameraParameters::KEY_ENG_MTK_SHADING_ENABLE[] = "mtk-shad-e";
+const char MtkCameraParameters::KEY_ENG_MTK_1to3_SHADING_ENABLE[] = "mtk-123-shad-e";
+const char MtkCameraParameters::KEY_ENG_SENSOR_SHADNING_ENABLE[] = "sr-shad-e";
+
+const char MtkCameraParameters::KEY_ENG_MANUAL_MULTI_NR_SUPPORTED[] = "mnr-s";
+const char MtkCameraParameters::KEY_ENG_MANUAL_MULTI_NR_ENABLE[] = "mnr-e";
+const char MtkCameraParameters::KEY_ENG_MANUAL_MULTI_NR_TYPE[] = "mnr-t";
+const char MtkCameraParameters::KEY_ENG_VIDEO_HDR_SUPPORTED[] = "vhdr-s";
+const char MtkCameraParameters::KEY_ENG_VIDEO_HDR_MODE[]= "vhdr-m";
+
+// Slow motion
+const char MtkCameraParameters::KEY_HSVR_PRV_SIZE[] = "hsvr-prv-size";
+const char MtkCameraParameters::KEY_SUPPORTED_HSVR_PRV_SIZE[] = "hsvr-prv-size-values";
+const char MtkCameraParameters::KEY_HSVR_PRV_FPS[] = "hsvr-prv-fps";
+const char MtkCameraParameters::KEY_SUPPORTED_HSVR_PRV_FPS[] = "hsvr-prv-fps-values";
+const char MtkCameraParameters::KEY_HSVR_SIZE_FPS[] = "hsvr-size-fps";
+const char MtkCameraParameters::KEY_SUPPORTED_HSVR_SIZE_FPS[] = "hsvr-size-fps-values";
+
+
+// MFB
+const char MtkCameraParameters::KEY_MFB_MODE[] = "mfb";
+const char MtkCameraParameters::KEY_MFB_MODE_MFLL[] = "mfll";
+const char MtkCameraParameters::KEY_MFB_MODE_AIS[] = "ais";
+
+//PIP
+const char MtkCameraParameters::KEY_PIP_MAX_FRAME_RATE_ZSD_ON[] = "pip-fps-zsd-on";
+const char MtkCameraParameters::KEY_PIP_MAX_FRAME_RATE_ZSD_OFF[] = "pip-fps-zsd-off";
+
+// Dynamic Frame Rate
+const char MtkCameraParameters::KEY_DYNAMIC_FRAME_RATE[] = "dynamic-frame-rate";
+const char MtkCameraParameters::KEY_DYNAMIC_FRAME_RATE_SUPPORTED[] = "dynamic-frame-rate-supported";
+
+// Stereo Feature
+const char MtkCameraParameters::KEY_STEREO_REFOCUS_MODE[] = "stereo-image-refocus";
+const char MtkCameraParameters::KEY_STEREO_DEPTHAF_MODE[] = "stereo-depth-af";
+const char MtkCameraParameters::KEY_STEREO_DISTANCE_MODE[] = "stereo-distance-measurement";
+const char MtkCameraParameters::KEY_STEREO_PICTURE_SIZE[] = "stereo-picture-size";
+const char MtkCameraParameters::KEY_SUPPORTED_STEREO_PICTURE_SIZE[] = "stereo-picture-size-values";
+const char MtkCameraParameters::KEY_REFOCUS_PICTURE_SIZE[] = "refocus-picture-size";
+const char MtkCameraParameters::KEY_SUPPORTED_REFOCUS_PICTURE_SIZE[] = "refocus-picture-size-values";
+const char MtkCameraParameters::KEY_STEREO_PREVIEW_FRAME_RATE[] = "stereo-preview-frame-rate";
+const char MtkCameraParameters::KEY_STEREO_CAPTURE_FRAME_RATE[] = "stereo-capture-frame-rate";
+
+// Image refocus
+const char MtkCameraParameters::KEY_REFOCUS_JPS_FILE_NAME[] = "refocus-jps-file-name";
+
+// 3DNR
+const char MtkCameraParameters::KEY_3DNR_MODE[] = "3dnr-mode";
+
+// manual shutter speed/gain 
+const char MtkCameraParameters::KEY_ENG_MANUAL_SHUTTER_SPEED[] = "m-ss"; 
+const char MtkCameraParameters:: KEY_ENG_MANUAL_SENSOR_GAIN[] = "m-sr-g"; 
+
+// sensor mode 
+const char MtkCameraParameters::KEY_ENG_SENOSR_MODE_SUPPORTED[] = "sen-mode-s"; 
+
+// Gesture Shot
+const char MtkCameraParameters::KEY_GESTURE_SHOT[] = "gesture-shot";
+const char MtkCameraParameters::KEY_GESTURE_SHOT_SUPPORTED[] = "gesture-shot-supported";
+
+// Native PIP
+const char MtkCameraParameters::KEY_NATIVE_PIP[] = "native-pip";
+const char MtkCameraParameters::KEY_NATIVE_PIP_SUPPORTED[] = "native-pip-supported";
+
+// PDAF    
+const char MtkCameraParameters::KEY_PDAF[] = "pdaf";
+const char MtkCameraParameters::KEY_PDAF_SUPPORTED[] = "pdaf-supported";
+
+// Flash Calibration 
+const char MtkCameraParameters::KEY_ENG_FLASH_CALIBRATION[] = "flash-cali"; 
+
+// flash-on
+const char MtkCameraParameters::KEY_FLASH_ON_VALUE[] = "flash-on";		//wg add flash onoff interface
+
+const char MtkCameraParameters::KEY_MORPHO_HHT[] = "night-shot";
+
+const char MtkCameraParameters::KEY_MORPHO_HHT_ANTI_MOTION[] = "night-anti-motion";
 }; // namespace android
diff --git a/include/camera/MtkCamera.h b/include/camera/MtkCamera.h
index 8982feb..08f8744 100644
--- a/include/camera/MtkCamera.h
+++ b/include/camera/MtkCamera.h
@@ -51,8 +51,8 @@
  * limitations under the License.
  */
 
-#ifndef ANDROID_HARDWARE_MTK_CAMERA_H
-#define ANDROID_HARDWARE_MTK_CAMERA_H
+#ifndef _MTK_FRAMEWORKS_AV_INCLUDE_CAMERA_MTKCAMERA_H_
+#define _MTK_FRAMEWORKS_AV_INCLUDE_CAMERA_MTKCAMERA_H_
 
 #include <binder/IMemory.h>
 
@@ -101,7 +101,13 @@ enum {
     MTK_CAMERA_MSG_EXT_NOTIFY_RAW_DUMP_STOPPED  = 0x00000012,
     //
     // Gesture Detection
-    MTK_CAMERA_MSG_EXT_NOTIFY_GESTURE_DETECT  = 0x00000013
+    MTK_CAMERA_MSG_EXT_NOTIFY_GESTURE_DETECT  = 0x00000013,
+    //
+    // Stereo Feature: warning message
+    MTK_CAMERA_MSG_EXT_NOTIFY_STEREO_WARNING    = 0x00000014,
+    //
+    // Stereo Feature: distance value
+    MTK_CAMERA_MSG_EXT_NOTIFY_STEREO_DISTANCE   = 0x00000015
 };
 
 // extended data message related to MTK_CAMERA_MSG_EXT_DATA used in dataCallback functions
@@ -155,6 +161,17 @@ enum {
     //  Compressed Image (not disable CAMERA_MSG_COMPRESSED_IMAGE)
     //      int[0]: current shut index; 0: the first one shut.
     MTK_CAMERA_MSG_EXT_DATA_COMPRESSED_IMAGE    = 0x00000010,
+
+    //
+    //  Stereo Shot
+    //      int[0]: data type.
+    MTK_CAMERA_MSG_EXT_DATA_JPS                 = 0x00000011,
+
+    //
+    //  Stereo Debug Data
+    //      int[0]: data type.
+    MTK_CAMERA_MSG_EXT_DATA_STEREO_DBG          = 0x00000012,
+
 };
 
 //  MTK-extended camera message data helper.
@@ -210,10 +227,8 @@ enum {
     CAMERA_CMD_GET_REC_BUF_INFO,
     CAMERA_CMD_CANCEL_CSHOT,
     CAMERA_CMD_SET_CSHOT_SPEED,
-#ifdef MTK_S3D_SUPPORT
     CAMERA_CMD_START_3DSHOT,
     CAMERA_CMD_STOP_3DSHOT,
-#endif
     CAMERA_CMD_START_MOTIONTRACK,
     CAMERA_CMD_STOP_MOTIONTRACK,
     CAMERA_CMD_START_CLONECAMERA,
@@ -221,6 +236,12 @@ enum {
     CAMERA_CMD_STOP_CLONECAMERA,
     CAMERA_CMD_START_GD_PREVIEW,            //(Gesture Detection)
     CAMERA_CMD_CANCEL_GD_PREVIEW,           //(Gesture Detection)
+    
+    // For SDK Heartrate
+    CAMERA_CMD_START_HR_PREVIEW,            //(Heartrate Detection)
+    CAMERA_CMD_STOP_HR_PREVIEW,             //(Heartrate Detection)
+    CAMERA_CMD_SETCB_HR_PREVIEW,            //(Heartrate Detection)
+    CAMERA_CMD_SETUSER_HR_PREVIEW,          //(Heartrate Detection)
 };
 
 /*
@@ -243,8 +264,9 @@ struct CameraMemInfo {
  *
  */
 enum {
-    CAMERA_ERROR_NO_MEMORY = 1000,
-    CAMERA_ERROR_RESET,
+    CAMERA_ERROR_NO_MEMORY   = 1000,
+    CAMERA_ERROR_RESET       = 1001,
+    CAMERA_ERROR_CALI_FLASH  = 1002, 
 };
 
 /*
@@ -272,4 +294,4 @@ struct CameraRecSetting {
 
 }; // namespace android
 
-#endif  //ANDROID_HARDWARE_MTK_CAMERA_H
+#endif  //_MTK_FRAMEWORKS_AV_INCLUDE_CAMERA_MTKCAMERA_H_
diff --git a/include/camera/MtkCameraParameters.h b/include/camera/MtkCameraParameters.h
index 4a34957..1299c4e 100644
--- a/include/camera/MtkCameraParameters.h
+++ b/include/camera/MtkCameraParameters.h
@@ -51,15 +51,15 @@
  * limitations under the License.
  */
 
-#ifndef ANDROID_HARDWARE_MTK_CAMERA_PARAMETERS_H
-#define ANDROID_HARDWARE_MTK_CAMERA_PARAMETERS_H
+#ifndef _MTK_FRAMEWORKS_AV_INCLUDE_CAMERA_MTKCAMERAPARAMETERS_H
+#define _MTK_FRAMEWORKS_AV_INCLUDE_CAMERA_MTKCAMERAPARAMETERS_H
 
 #include <camera/CameraParameters.h>
 
 namespace android {
 
 
-/**
+/**  
  * @class      MtkCameraParameters
  * @brief      MTK-proprietary camera parameters.
  * @details    This class is derived from CameraParameters and defines MTK-proprietary camera parameters.
@@ -85,7 +85,7 @@ public:
     static const char APP_MODE_NAME_DEFAULT[];
     static const char APP_MODE_NAME_MTK_ENG[];
     static const char APP_MODE_NAME_MTK_ATV[];
-    static const char APP_MODE_NAME_MTK_S3D[];
+    static const char APP_MODE_NAME_MTK_STEREO[];
     static const char APP_MODE_NAME_MTK_VT[];
     static const char APP_MODE_NAME_MTK_PHOTO[];
     static const char APP_MODE_NAME_MTK_VIDEO[];
@@ -111,8 +111,30 @@ public:
     static const char KEY_FB_SHARP_MIN[];
     static const char KEY_FB_SHARP_MAX[];
     //
+    static const char KEY_FB_ENLARGE_EYE[];
+    static const char KEY_FB_ENLARGE_EYE_MIN[];
+    static const char KEY_FB_ENLARGE_EYE_MAX[];
+    //
+    static const char KEY_FB_SLIM_FACE[];
+    static const char KEY_FB_SLIM_FACE_MIN[];
+    static const char KEY_FB_SLIM_FACE_MAX[];
+    //
+    static const char KEY_FB_EXTREME_BEAUTY[];
+    //
+    static const char KEY_FB_TOUCH_POS[];
+    //
+    static const char KEY_FB_FACE_POS[];
+    //
+    static const char KEY_FACE_BEAUTY[];
+    //
+    static const char KEY_FB_EXTREME_SUPPORTED[];
+    //
+    static const char KEY_FEATURE_MAX_FPS[];
+    //
+    static const char KEY_VIDEO_FACE_BEAUTY_SUPPORTED[];
+    //
 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
-//
+//  
 //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
     static const char KEY_EXPOSURE[];
     static const char KEY_EXPOSURE_METER[];
@@ -124,16 +146,16 @@ public:
     static const char KEY_SATURATION[];
     static const char KEY_BRIGHTNESS[];
     static const char KEY_CONTRAST[];
-    static const char KEY_ZSD_MODE[];
+    static const char KEY_ZSD_MODE[];	
     static const char KEY_SUPPORTED_ZSD_MODE[];
-    static const char KEY_AWB2PASS[];
+    static const char KEY_AWB2PASS[];	
     static const char KEY_AF_LAMP_MODE [];
 
     static const char KEY_STEREO_3D_PREVIEW_SIZE[];
-    static const char KEY_STEREO_3D_PICTURE_SIZE[];
-    static const char KEY_STEREO_3D_TYPE [];
+    static const char KEY_STEREO_3D_PICTURE_SIZE[];    
+    static const char KEY_STEREO_3D_TYPE [];		
     static const char KEY_STEREO_3D_MODE [];
-    static const char KEY_STEREO_3D_IMAGE_FORMAT [];
+    static const char KEY_STEREO_3D_IMAGE_FORMAT [];	
     //
     static const char KEY_FPS_MODE[];       // normal,fix
     //
@@ -151,7 +173,7 @@ public:
     //
     static const char KEY_SENSOR_DEV[];    // main,sub,atv
     static const char KEY_SUPPORTED_SENSOR_DEVS[];
-
+	
     // Values for KEY_EXPOSURE
     static const char EXPOSURE_METER_SPOT[];
     static const char EXPOSURE_METER_CENTER[];
@@ -187,15 +209,15 @@ public:
     static const char CAPTURE_MODE_BEST_SHOT[];
     static const char CAPTURE_MODE_EV_BRACKET_SHOT[];
     static const char CAPTURE_MODE_SMILE_SHOT[];
-    static const char CAPTURE_MODE_AUTO_PANORAMA_SHOT[];
-    static const char CAPTURE_MODE_MOTION_TRACK_SHOT[];
-    static const char CAPTURE_MODE_MAV_SHOT[];
-    static const char CAPTURE_MODE_HDR_SHOT[];
+    static const char CAPTURE_MODE_AUTO_PANORAMA_SHOT[]; 
+    static const char CAPTURE_MODE_MOTION_TRACK_SHOT[]; 
+    static const char CAPTURE_MODE_MAV_SHOT[]; 
+    static const char CAPTURE_MODE_HDR_SHOT[]; 
     static const char CAPTURE_MODE_ASD_SHOT[];
     static const char CAPTURE_MODE_ZSD_SHOT[];
-    static const char CAPTURE_MODE_PANO_3D[];
-    static const char CAPTURE_MODE_SINGLE_3D[];
-    static const char CAPTURE_MODE_FACE_BEAUTY[];
+    static const char CAPTURE_MODE_PANO_3D[]; 
+    static const char CAPTURE_MODE_SINGLE_3D[]; 
+    static const char CAPTURE_MODE_FACE_BEAUTY[]; 	
     static const char CAPTURE_MODE_CONTINUOUS_SHOT[];
     static const char CAPTURE_MODE_MULTI_MOTION[];
     static const char CAPTURE_MODE_GESTURE_SHOT[];
@@ -249,25 +271,26 @@ public:
      *      y stride     = 192x144
      *      cr stride    = 96x72
      *      cb stride    = 96x72
-     *
+     *   
      */
     static const char PIXEL_FORMAT_YV12_GPU[];
 
     /*
      *  YUV422 format, 1 plane (UYVY)
      *
-     *  Effective bits per pixel : 16
+     *  Effective bits per pixel : 16 
      *
-     *  Y sample at every pixel, U and V sampled at every second pixel horizontally on each line.
+     *  Y sample at every pixel, U and V sampled at every second pixel horizontally on each line. 
      *  A macropixel contains 2 pixels in 1 uint32_t.
      *
      */
-    static const char PIXEL_FORMAT_YUV422I_UYVY[];
+    static const char PIXEL_FORMAT_YUV422I_UYVY[];   
     //
     static const char PIXEL_FORMAT_YUV422I_VYUY[];
     static const char PIXEL_FORMAT_YUV422I_YVYU[];
-    static const char PIXEL_FORMAT_BAYER8[];
-    static const char PIXEL_FORMAT_BAYER10[];
+    static const char PIXEL_FORMAT_BAYER8[]; 
+    static const char PIXEL_FORMAT_BAYER10[]; 
+    static const char PIXEL_FORMAT_BITSTREAM[];
 
     /**
      * @var KEY_BRIGHTNESS_VALUE
@@ -277,11 +300,11 @@ public:
      */
     static const char KEY_BRIGHTNESS_VALUE[];
 
-    // ISP Operation mode for meta mode use
+    // ISP Operation mode for meta mode use 
     static const char KEY_ISP_MODE[];
-    // AF
-    static const char KEY_AF_X[];
-    static const char KEY_AF_Y[];
+    // AF 
+    static const char KEY_AF_X[]; 
+    static const char KEY_AF_Y[]; 
     static const char KEY_FOCUS_ENG_MAX_STEP[];
     static const char KEY_FOCUS_ENG_MIN_STEP[];
     static const char KEY_FOCUS_ENG_BEST_STEP[];
@@ -290,26 +313,39 @@ public:
     static const int  PREVIEW_DUMP_RESOLUTION_NORMAL;
     static const int  PREVIEW_DUMP_RESOLUTION_CROP;
 
-    // Values for effect
+    // Values for effect 
     static const char EFFECT_SEPIA_BLUE[];
-    static const char EFFECT_SEPIA_GREEN[];
-    // Values for AWB
+    static const char EFFECT_SEPIA_GREEN[];    
+    static const char  EFFECT_NASHVILLE[];
+    static const char  EFFECT_HEFE[];
+    static const char  EFFECT_VALENCIA[];
+    static const char  EFFECT_XPROII[];
+    static const char  EFFECT_LOFI[];
+    static const char  EFFECT_SIERRA[];
+    static const char  EFFECT_KELVIN[];
+    static const char  EFFECT_WALDEN[];;
+    static const char  EFFECT_F1977[];
+    // Values for AWB 
     static const char WHITE_BALANCE_TUNGSTEN[];
     // Eng
     static const char ISO_SPEED_ENG[];
     static const char KEY_FOCUS_ENG_MODE[]; // 0,1,2,3 (0: normal)
-    static const char KEY_FOCUS_ENG_STEP[];
+    static const char KEY_FOCUS_ENG_STEP[];	
     static const char KEY_RAW_SAVE_MODE[];  // on, off
-    static const char KEY_RAW_PATH[];
+    static const char KEY_RAW_PATH[];	
 
 	// KEY for Continuous shot speed
     static const char KEY_FAST_CONTINUOUS_SHOT[];
 
+    // KEY for Video HDR
     static const char KEY_VIDEO_HDR[];
+    static const char KEY_VIDEO_HDR_MODE[];    
+    static const char VIDEO_HDR_MODE_IVHDR[];
+    static const char VIDEO_HDR_MODE_MVHDR[];
 
     static const char KEY_MAX_NUM_DETECTED_OBJECT[];
 
-    // KEY for c_shot indicator
+    // KEY for c_shot indicator 
     static const char KEY_CSHOT_INDICATOR[];
 
     // KEY for [Engineer Mode] Add new camera paramters for new requirements
@@ -343,6 +379,9 @@ public:
     static const char KEY_ENG_PARAMETER2[];
     static const char KEY_ENG_PARAMETER3[];
 
+    static const char KEY_ENG_EV_VALUE[];
+    static const char KEY_ENG_EVB_ENABLE[];
+
     static const char KEY_ENG_SAVE_SHADING_TABLE[];
     static const char KEY_ENG_SHADING_TABLE[];
     static const int KEY_ENG_SHADING_TABLE_AUTO;
@@ -354,7 +393,111 @@ public:
     // KEY for [Engineer Mode] Add new camera paramters for ev calibration
     static const char KEY_ENG_EV_CALBRATION_OFFSET_VALUE[];
 
-public:     //// on/off => FIXME: should be replaced with TRUE[]
+    // KEY for [Engineer Mode] MFLL: Multi-frame lowlight capture
+    static const char KEY_ENG_MFLL_SUPPORTED[];
+    static const char KEY_ENG_MFLL_ENABLE[];
+    static const char KEY_ENG_MFLL_PICTURE_COUNT[];
+
+    // KEY for [Engineer Mode] Two more sensor mode
+    static const char KEY_ENG_SENOSR_MODE_SLIM_VIDEO1_SUPPORTED[];
+    static const char KEY_ENG_SENOSR_MODE_SLIM_VIDEO2_SUPPORTED[];
+
+    // KEY for [Engineer Mode] Video raw dump
+    static const char KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_2M_SUPPORTED[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_RESIZE_TO_4K2K_SUPPORTED[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_CROP_CENTER_2M_SUPPORTED[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_SUPPORTED[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_ENABLE[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MIN[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_MAX[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_LOW[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_MANUAL_FRAME_RATE_RANGE_HIGH[];
+    static const char KEY_ENG_VIDEO_RAW_DUMP_RESIZE[];
+
+    static const char KEY_ENG_MTK_AWB_SUPPORTED[];
+    static const char KEY_ENG_SENSOR_AWB_SUPPORTED[];
+    static const char KEY_ENG_MTK_AWB_ENABLE[];
+    static const char KEY_ENG_SENSOR_AWB_ENABLE[];
+
+    static const char KEY_ENG_MTK_SHADING_SUPPORTED[];
+    static const char KEY_ENG_MTK_1to3_SHADING_SUPPORTED[];
+    static const char KEY_ENG_SENSOR_SHADNING_SUPPORTED[];
+    static const char KEY_ENG_MTK_SHADING_ENABLE[];
+    static const char KEY_ENG_MTK_1to3_SHADING_ENABLE[];
+    static const char KEY_ENG_SENSOR_SHADNING_ENABLE[];
+
+    static const char KEY_ENG_MANUAL_MULTI_NR_SUPPORTED[];
+    static const char KEY_ENG_MANUAL_MULTI_NR_ENABLE[];
+    static const char KEY_ENG_MANUAL_MULTI_NR_TYPE[];
+    static const char KEY_ENG_VIDEO_HDR_SUPPORTED[];
+    static const char KEY_ENG_VIDEO_HDR_MODE[];
+
+    // Slow Motion
+    static const char KEY_HSVR_PRV_SIZE[];
+    static const char KEY_SUPPORTED_HSVR_PRV_SIZE[];
+    static const char KEY_HSVR_PRV_FPS[];
+    static const char KEY_SUPPORTED_HSVR_PRV_FPS[];
+    static const char KEY_HSVR_SIZE_FPS[];
+    static const char KEY_SUPPORTED_HSVR_SIZE_FPS[];
+
+    // MFB
+    static const char KEY_MFB_MODE[];
+    static const char KEY_MFB_MODE_MFLL[];
+    static const char KEY_MFB_MODE_AIS[];
+
+    //PIP
+    static const char KEY_PIP_MAX_FRAME_RATE_ZSD_ON[];
+    static const char KEY_PIP_MAX_FRAME_RATE_ZSD_OFF[];
+
+    // Dynamic Frame Rate
+    static const char KEY_DYNAMIC_FRAME_RATE[];
+    static const char KEY_DYNAMIC_FRAME_RATE_SUPPORTED[];
+
+    // Stereo Feature
+    static const char KEY_STEREO_REFOCUS_MODE[];
+    static const char KEY_STEREO_DEPTHAF_MODE[];
+    static const char KEY_STEREO_DISTANCE_MODE[];
+    static const char KEY_STEREO_PICTURE_SIZE[];
+    static const char KEY_SUPPORTED_STEREO_PICTURE_SIZE[];
+    static const char KEY_REFOCUS_PICTURE_SIZE[];
+    static const char KEY_SUPPORTED_REFOCUS_PICTURE_SIZE[];
+    static const char KEY_STEREO_PREVIEW_FRAME_RATE[];
+    static const char KEY_STEREO_CAPTURE_FRAME_RATE[];
+
+    // Image refocus
+    static const char KEY_REFOCUS_JPS_FILE_NAME[];
+
+    // 3DNR
+    static const char KEY_3DNR_MODE[];
+    // for manual exposure time / sensor gain 
+    static const char KEY_ENG_MANUAL_SHUTTER_SPEED []; 
+    static const char KEY_ENG_MANUAL_SENSOR_GAIN[]; 
+
+    // for sensor mode 
+    static const char KEY_ENG_SENOSR_MODE_SUPPORTED[]; 
+
+    // Gesture Shot
+    static const char KEY_GESTURE_SHOT[];
+    static const char KEY_GESTURE_SHOT_SUPPORTED[];
+
+    // Native PIP
+    static const char KEY_NATIVE_PIP[];
+    static const char KEY_NATIVE_PIP_SUPPORTED[];
+    
+    // PDAF
+    static const char KEY_PDAF[];
+    static const char KEY_PDAF_SUPPORTED[];
+    
+    // Flash Calibration 
+    static const char KEY_ENG_FLASH_CALIBRATION[]; 
+
+    static const char KEY_FLASH_ON_VALUE[];	//wg add flash onoff interface
+
+    static const char KEY_MORPHO_HHT[];
+
+    static const char KEY_MORPHO_HHT_ANTI_MOTION[];
+
+public:     ////    on/off => FIXME: should be replaced with TRUE[]
     static const char ON[];
     static const char OFF[];
 };
-- 
2.9.3

